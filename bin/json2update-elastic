#!/usr/bin/env node
/**
 * LambdaCloud copyright 2015.
 *
 */

var program = require('commander');
var _ = require('lodash');
var jsonStream = require("json-stream");

// Get command line arguments, now is form standard input
program.version('0.1.0')
  .option('-H, --host <Elastic Host>', 'Specify Elasticsearch host and port, default: localhost:9200', 'localhost:9200')
  .option('-D, --debug', 'Enable Debugging')
  .option('-i, --indices <Elastic indices>', 'Specify indices')
  .option('-t, --type <Elastic type>', 'Specify type')
  .option('--api <version>', 'Specify Elasticsearch API version, such as, 1.1, 1.2, 1.3, default: 1.4.', '1.4')
  .parse(process.argv);

var esLogLevel = 'warning';
if (program.debug) {
  var debug = require('debug');
  debug.enable('elastic-update-pipe:debug');
  esLogLevel = 'debug';
}

//use stream, stringLine, elasticUpdate to pipe data
var arraySize = 100;
var lambdaUtil = require('../lambda-util');
var stream = jsonStream();
var stringLine = new lambdaUtil.ElasticIndexDoc(program.indices, program.type);
var elasticBulkArray = new lambdaUtil.ElasticBulkArray(arraySize);
var elasticUpdate = new lambdaUtil.ElasticUpdatePipe({
  host: program.host,
  log: esLogLevel,
  keepAlive: false
});


// use pipe deal with the data from standard in
process.stdin
  .pipe(stream)
  .pipe(stringLine)
  .pipe(elasticBulkArray)
  .pipe(elasticUpdate);
