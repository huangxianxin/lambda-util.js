#!/usr/bin/env node
/**
 * LambdaCloud copyright 2015.
 *
 */

var program = require('commander');
var _ = require('lodash');
var assert = require('assert');

// Get command line arguments
program.version('0.1.0')
  .option('-H, --host <Elastic Host>', 'Specify Elasticsearch host and port, default: localhost:9200', 'localhost:9200')
  .option('-D, --debug', 'Enable Debugging')
  .option('-i, --indices <Elastic indices>', 'Specify indices')
  .option('-t, --type <Elastic type>', 'Specify type')
  .option('--api <version>', 'Specify Elasticsearch API version, such as, 1.1, 1.2, 1.3, default: 1.4.', '1.4')
  .parse(process.argv);

// Required options
_.forEach(['indices'], function (opt) {
  assert(program[opt], '--' + opt + ' is missing, exit.');
});

var esLogLevel = 'warning';
if (program.debug) {
  var Debug = require('debug');
  Debug.enable('elastic-pipe:debug');
  esLogLevel = 'debug';
}

//use elasticRead, arrayTrans, jsonLine to pipe data
var LambdaUtil = require('../lambda-util');

var jsonLine = new LambdaUtil.JsonLine();
var arrayTrans = new LambdaUtil.ArrayTrans();
var elasticRead = new LambdaUtil.ElasticReadPipe({
  host: program.host,
  log: esLogLevel,
  keepAlive: false
}, program.indices, program.type);


elasticRead
  .pipe(arrayTrans)
  .pipe(jsonLine)
  .pipe(process.stdout);
